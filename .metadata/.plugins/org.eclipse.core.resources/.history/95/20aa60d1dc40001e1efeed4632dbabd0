package com.examplemicroservices.department.service.controller;



import java.util.logging.Logger;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.examplemicroservices.department.service.entity.Department;
import com.examplemicroservices.department.service.service.DepartmentService;

//import io.github.resilience4j.circuitbreaker.annotation.CircuitBreaker;
import lombok.extern.slf4j.Slf4j;

@RestController
@RequestMapping("/departments")
@Slf4j
public class DepartmentController {
	
	@Autowired 
	private DepartmentService departmentService; 
	
	@PostMapping("/")
	public Department saveDepartment(@RequestBody Department department) {
		//Logger.info("Inside save department method of Department Controller");
		 // log.info("Inside save department method of Department Controller");	
		Logger log = Logger.getLogger(DepartmentController.class.getName());
		log.info("Inside deprtment sve method of Deparrtment Controller");
		return departmentService.saveDepartment(department);
	}
	
	@GetMapping("/{id}")
	//@CircuitBreaker(name = "departmentCircuitBreaker", fallbackMethod = "departmentFallbackMethod")
	public Department findDepartmentById(@PathVariable("id") Long departmentId) {
		
		return departmentService.findDepartmentById(departmentId);
	}
	
	
	public String departmentFallbackMethod(Throwable throwable) {
		return "Department service is taking longer than expected."
				+ "Please try after sometime.";
	}
}
